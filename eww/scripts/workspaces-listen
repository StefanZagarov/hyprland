#!/bin/bash
# Listen for Hyprland workspace changes and output JSON on change

export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8

# Function to get current workspace state
get_workspaces() {
    local active_ws=$(hyprctl activeworkspace -j | jq -r '.id')
    local workspaces_info=$(hyprctl workspaces -j)
    
    printf '['
    for i in {1..10}; do
        local has_windows=$(echo "$workspaces_info" | jq -r ".[] | select(.id == $i) | .windows // 0")
        local is_active="false"
        local icon="○"
        
        if [ "$active_ws" = "$i" ]; then
            is_active="true"
            icon="●"
        elif [ "$has_windows" != "0" ] && [ "$has_windows" != "null" ]; then
            icon="●"
        fi
        
        printf '{"id":%d,"active":%s,"empty":%s,"icon":"%s"}' \
            "$i" "$is_active" "$([ "$has_windows" = "0" ] && echo "true" || echo "false")" "$icon"
        
        [ $i -lt 10 ] && printf ','
    done
    printf ']\n'
}

# Output initial state
get_workspaces

# Listen for workspace events
socat -u UNIX-CONNECT:/run/user/$(id -u)/hypr/$HYPRLAND_INSTANCE_SIGNATURE/.socket2.sock - | while read -r line; do
    # Only update on workspace events - use case statement instead of regex
    case "$line" in
        workspace*|createworkspace*|destroyworkspace*|openwindow*|closewindow*)
            get_workspaces
            ;;
    esac
done 