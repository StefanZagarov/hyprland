#!/usr/bin/env bash

tmp_dir="/tmp/cliphist"
rm -rf "$tmp_dir"

# Copy function that removes old entries and puts selected item at top of clipboard history
copy_clipboard_content() {
    local content="$1"
    local content_to_copy=""
    
    # Strip whitespace (the key fix we discovered)
    content=$(echo -n "$content" | tr -d '\r\n')
    
    # Determine what we would copy
    if [[ "$content" =~ ^file://(.+\.(jpg|jpeg|png|bmp|gif|webp|tiff|svg))$ ]]; then
        content_to_copy="$content"
    elif [[ "$content" =~ ^(.+\.(jpg|jpeg|png|bmp|gif|webp|tiff|svg))$ ]]; then
        local filepath="$HOME/${content}"
        if [[ -f "$filepath" ]]; then
            content_to_copy="file://$filepath"
        else
            content_to_copy="$content"
        fi
    else
        content_to_copy="$content"
    fi
    
    # Remove any existing duplicate entries first
    # Search for lines that end with our content (after the ID and tab)
    local existing_entry=$(cliphist list | grep -F "$content_to_copy")
    if [[ -n "$existing_entry" ]]; then
        # Extract the ID and delete the old entry
        if [[ "$existing_entry" =~ ^([0-9]+) ]]; then
            local old_id="${BASH_REMATCH[1]}"
            echo "$old_id" | cliphist delete
        fi
    fi
    
    # Now copy the content (will appear at top of history)
    if [[ "$content" =~ ^file://(.+\.(jpg|jpeg|png|bmp|gif|webp|tiff|svg))$ ]]; then
        # Copy the file URI in the format that file managers and Discord expect
        echo -n "$content" | wl-copy --type "text/uri-list"
    elif [[ "$content" =~ ^(.+\.(jpg|jpeg|png|bmp|gif|webp|tiff|svg))$ ]]; then
        local filepath="$HOME/${content}"
        if [[ -f "$filepath" ]]; then
            echo -n "file://$filepath" | wl-copy --type "text/uri-list"
        else
            echo -n "$content" | wl-copy
        fi
    else
        # Default: copy as-is (text or binary)
        echo -n "$content" | wl-copy
    fi
}

# If argument provided, decode and copy
if [[ -n "$1" ]]; then
    # Extract ID if it's a full line, otherwise use as-is
    if [[ "$1" =~ ^([0-9]+) ]]; then
        id="${BASH_REMATCH[1]}"
    else
        id="$1"
    fi
    content=$(echo -n "$id" | cliphist decode)
    copy_clipboard_content "$content"
    exit
fi

# Generate list with icons using awk
mkdir -p "$tmp_dir"

read -r -d '' prog <<'EOF'
/^[0-9]+\s*<meta http-equiv=/ { next }
match($0, /^([0-9]+)\s*(\[\[\s*)?binary.*(jpg|jpeg|png|bmp|gif|webp|tiff|svg)/, grp) {
    system("echo -n " grp[1] " | cliphist decode > " ENVIRON["tmp_dir"] "/" grp[1] "." grp[3])
    print $0 "\0icon\x1f" ENVIRON["tmp_dir"] "/" grp[1] "." grp[3]
    next
}
match($0, /^([0-9]+)\s*file:\/\/(.+\.(jpg|jpeg|png|bmp|gif|webp|tiff|svg))$/, grp) {
    if (system("test -f \"" grp[2] "\"") == 0) {
        print $0 "\0icon\x1f" grp[2]
    } else {
        print $0 "\0icon\x1fimage-x-generic"
    }
    next
}
1
EOF

export tmp_dir
cliphist list | gawk "$prog" 